name: Build and push

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENSE'
      - 'CODEOWNERS'
      - '.github/**'
  workflow_dispatch:
jobs:

  build_java_base:
    permissions:
      contents: read
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract timesttamp
        id: timestamp
        run: |
          echo "timestamp=$(date -u +'%Y.%m.%d.%H%MZ')" >> $GITHUB_OUTPUT
          echo "date_hour=$(date -u +'%Y%m%d%HZ')" >> $GITHUB_ENV
      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}/java-base
          tags: |
            # Create build-version tag if it is not set:
            type=raw,value=${{ steps.timestamp.outputs.timestamp }},priority=255
            # set latest tag for default branch (master)
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: java
          file: java/base/Dockerfile
          build-args: |
            CACHEBUST=${{ env.date_hour }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: ${{ github.ref_name == github.event.repository.default_branch}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_java:
    needs: build_java_base
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        version: [ '21', '25', 'chainguard-21', 'chainguard-25' ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Nais
        uses: nais/login@v0
        with:
          team: k9saksbehandling
      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        env:
          timestamp: ${{needs.build_java_base.outputs.timestamp}}
        with:
          images: ghcr.io/${{ github.repository }}/java-${{matrix.version}}
          tags: |
            type=raw,value=${{ env.timestamp }},priority=255
            # set latest tag for default branch (master)
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          timestamp: ${{needs.build_java_base.outputs.timestamp}}
        with:
          context: java
          file: java/${{matrix.version}}/Dockerfile
          build-args: |
            BASE_IMAGE_VERSION=${{ github.ref_name == github.event.repository.default_branch && env.timestamp || 'latest' }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: ${{ github.ref_name == github.event.repository.default_branch}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
