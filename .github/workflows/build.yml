name: Build and deploy

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
  schedule:
    - cron: '23 23 * * 2'
  workflow_dispatch:

jobs:
  build-java:
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        version: [ '21', '23' ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract timesttamp
        id: timestamp
        run: |
          echo "TIMESTAMP=$(date -u +'%Y.%m.%d.%H%MZ')" >> $GITHUB_ENV
          echo "DATE_HOUR=$(date -u +'%Y%m%d%HZ')" >> $GITHUB_ENV
      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}/java-${{matrix.version}}
          tags: |
            # Create build-version tag if it is not set:
            type=raw,value=${{ env.TIMESTAMP }},priority=255
            # set latest tag for default branch (master)
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: java
          file: java/java-${{matrix.version}}.Dockerfile
          build-args: |
            CACHEBUST=${{ env.DATE_HOUR }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: ${{ github.ref_name == github.event.repository.default_branch}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max